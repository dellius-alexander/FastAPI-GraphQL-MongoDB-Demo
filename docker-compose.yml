# Place username and password in .env file, pass as environment variables, or password file
# Paths: .devcontainer/mongo.Dockerfile, .devcontainer/app.Dockerfile, .devcontainer/config/mongo/mongod.conf, .devcontainer/config/mongo/mongo-init.js
# Compare this snippet from .github/workflows/api-tests.yml, and set GitHub action environment variables
version: '3.8'
volumes:
    mongo_data: null

networks:
  fastapi-mongo:
    name: fastapi-mongo
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.26.0.0/24
        - gateway: 172.26.0.1


services:
  # MongoDB service
  mongo:
#    image: mongo:5.0.16
    build:
      context: .
      dockerfile: .devcontainer/mongo.Dockerfile
    container_name: mongo
    restart: always
    expose:
      - ${MONGODB_PORT:-27017}
    ports:
      - ${MONGODB_PORT:-27017}:${MONGODB_PORT:-27017}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-developer}
    volumes:
      - mongo_data:/data/db
#      - ./.devcontainer/config/mongo/mongod.conf:/etc/mongod.conf
#      - ./.devcontainer/config/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
        - fastapi-mongo
#    healthcheck:
#      test: ["CMD", "mongo", "--quiet", "http://mongo/test", "--eval", "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'"]
#      interval: 30s
#      timeout: 20s
#      retries: 5
#      start_period: 30s

  # Application service
  app:
    build:
      context: .
      dockerfile: .devcontainer/app.Dockerfile
    container_name: app
    restart: always
    expose:
      - ${APP_PORT:-8000}
    ports:
      - ${APP_PORT:-8000}:${APP_PORT:-8000}
    environment:
      APP_USER: ${APP_USER:-alpha}
      MONGODB_HOST: ${MONGODB_HOST:-mongo}
      MONGODB_PORT: ${MONGODB_PORT:-27017}
      MONGODB_USERNAME: ${APP_USER:-alpha}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD:-developer}
      MONGODB_DATABASE: ${MONGODB_DATABASE:-hyfi}
    depends_on:
      - mongo
    volumes:
      - ./src:/app
    networks:
        - fastapi-mongo

  # Mongo Express service
  mongo-express:
    image: mongo-express:0.54.0
    container_name: mongo-express
    restart: always
    expose:
      - ${MONGO_EXPRESS_PORT:-8081}
    ports:
      - ${MONGO_EXPRESS_PORT:-8081}:${MONGO_EXPRESS_PORT:-8081}
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USERNAME:-root} #| MongoDB admin username
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD:-developer} #| MongoDB admin password
      ME_CONFIG_MONGODB_URL: mongodb://${MONGODB_USERNAME:-root}:${MONGODB_PASSWORD:-developer}@${MONGODB_HOST:-mongo}:${MONGODB_PORT:-27017}/
#      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'false'          #| Enable admin access to all databases. Send strings: `"true"` or `"false"`
#      ME_CONFIG_MONGODB_SERVER: Hyfi                   #| MongoDB container name. Use comma delimited list of host names for replica sets.
#      ME_CONFIG_MONGODB_AUTH_DATABASE: Hyfi            #| Database name
#      ME_CONFIG_MONGODB_AUTH_USERNAME: root            #| Database username
#      ME_CONFIG_MONGODB_AUTH_PASSWORD: ${MONGODB_PASSWORD} #| Database password
#      ME_CONFIG_BASICAUTH_USERNAME    | ''             #| mongo-express web username
#      ME_CONFIG_BASICAUTH_PASSWORD    | ''             #| mongo-express web password
#      ME_CONFIG_MONGODB_PORT: 27017                    #| MongoDB port
#      ME_CONFIG_MONGODB_SERVER: mongo                  #| MongoDB container name. Use comma delimited list of host names for replica sets.
#      ME_CONFIG_OPTIONS_EDITORTHEME   | 'default'      #| mongo-express editor color theme, [more here](http://codemirror.net/demo/theme.html)
#      ME_CONFIG_REQUEST_SIZE          | '100kb'        #| Maximum payload size. CRUD operations above this size will fail in [body-parser](https://www.npmjs.com/package/body-parser).
#      ME_CONFIG_SITE_BASEURL: ${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongo:27017/            #| Set the baseUrl to ease mounting at a subdirectory. Remember to include a leading and trailing slash.
#      ME_CONFIG_SITE_COOKIESECRET     | 'cookiesecret' #| String used by [cookie-parser middleware](https://www.npmjs.com/package/cookie-parser) to sign cookies.
#      ME_CONFIG_SITE_SESSIONSECRET    | 'sessionsecret'#| String used to sign the session ID cookie by [express-session middleware](https://www.npmjs.com/package/express-session).
#      ME_CONFIG_SITE_SSL_ENABLED      | 'false'        #| Enable SSL.
#      ME_CONFIG_SITE_SSL_CRT_PATH     | ''             #| SSL certificate file.
#      ME_CONFIG_SITE_SSL_KEY_PATH     | ''             #| SSL key file.
    depends_on:
      - mongo
    networks:
        - fastapi-mongo

