name: Testing FastAPI, GraphQL, MongoDB, using Docker Compose

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]
    env:
      APP_PORT: 8000
      APP_USER: alpha
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: developer
      MONGODB_URL: mongo
      MONGODB_PORT: 27017
      MONGODB_DATABASE: Hyfi
      MONGO_EXPRESS_PORT: 8081
    steps:
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Checkout
        uses: actions/checkout@v2

      # Task for installing dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install black pytest pytest-asyncio 
          if [ -f requirements.txt ]; then pip install  -r requirements-dev.txt ; fi 
          

      # Task for starting docker compose
      - name: Start docker compose
        run: |
          docker-compose up -d --build --remove-orphans --force-recreate 
          docker ps -a 
          mkdir -p logs

      # Task for linting with black
      - name: Lint with black
        run: |
          # Code formatting with black, check every python file in the src directory 
          black src 
          black --check src

      # Task for running tests
      - name: Execute build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 -m build

      # Task for running tests
      - name: Execute tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pytest 

      # Task for stopping docker compose
      - name: Stop containers
        if: always()
        run: docker-compose down

      # Task for uploading test results
      - name: Upload build artifact
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Build-Results
          path: |
            dist
            FastAPI_GraphQL_MongoDB_Demo.egg-info
            tests/logs
            src/logs
            README.md
            LICENSE
    
